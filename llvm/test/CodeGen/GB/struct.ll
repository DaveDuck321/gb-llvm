; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=gb -verify-machineinstrs -O3 < %s \
; RUN:   | FileCheck %s -check-prefix=GBI-O3

%type._Z8TrueType = type {}
%type._Z9FalseType = type {}
%type._Z8EnableIfI8TrueTypeE = type {}
%type._Z5Range = type {i16, i8}
%type._Z8OverrideIsE = type {}

define i8 @main() {
; GBI-O3-LABEL: main:
; GBI-O3:       ; %bb.0: ; %begin
; GBI-O3-NEXT:    add sp, -12
; GBI-O3-NEXT:    ld hl, sp, 4
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld hl, sp, 2
; GBI-O3-NEXT:    ldi (hl), a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    call make_range
; GBI-O3-NEXT:    ld hl, sp, 2
; GBI-O3-NEXT:    ld c, (hl)
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld b, (hl)
; GBI-O3-NEXT:    ld a, c
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld h, a
; GBI-O3-NEXT:    ld d, (hl)
; GBI-O3-NEXT:    ld hl, sp, 8
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld c, l
; GBI-O3-NEXT:    ld a, c
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld h, a
; GBI-O3-NEXT:    ld (hl), d
; GBI-O3-NEXT:    ld a, c
; GBI-O3-NEXT:    add $02
; GBI-O3-NEXT:    ld e, a
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld d, a
; GBI-O3-NEXT:    ld hl, sp, 0
; GBI-O3-NEXT:    ld (hl), e
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), d
; GBI-O3-NEXT:    ld hl, sp, 2
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    add $02
; GBI-O3-NEXT:    ld e, a
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld d, a
; GBI-O3-NEXT:    ld a, (hl)
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld l, c
; GBI-O3-NEXT:    ; kill: def $bc
; GBI-O3-NEXT:    ld (hl), a
; GBI-O3-NEXT:    ld h, d
; GBI-O3-NEXT:    ld l, e
; GBI-O3-NEXT:    ; kill: def $de
; GBI-O3-NEXT:    ld a, (hl)
; GBI-O3-NEXT:    ld hl, sp, 0
; GBI-O3-NEXT:    ld b, (hl)
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, b
; GBI-O3-NEXT:    ld (hl), a
; GBI-O3-NEXT:    add sp, 12
; GBI-O3-NEXT:    ret
begin:
  %0 = alloca %type._Z5Range
  %1 = call %type._Z5Range @make_range()
  store %type._Z5Range %1, ptr %0
  %2 = getelementptr inbounds %type._Z5Range, ptr %0, i32 0, i32 1
  %3 = load i8, ptr %2, align 1
  ret i8 %3
}

define %type._Z5Range @make_range() {
; GBI-O3-LABEL: make_range:
; GBI-O3:       ; %bb.0: ; %begin
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    add $02
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld e, a
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld d, a
; GBI-O3-NEXT:    ld (hl), $00
; GBI-O3-NEXT:    ld h, d
; GBI-O3-NEXT:    ld l, e
; GBI-O3-NEXT:    ; kill: def $de
; GBI-O3-NEXT:    ld (hl), $00
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld l, c
; GBI-O3-NEXT:    ; kill: def $bc
; GBI-O3-NEXT:    ld (hl), $0a
; GBI-O3-NEXT:    ret
begin:
  %0 = insertvalue %type._Z5Range undef, i16 0, 0
  %1 = insertvalue %type._Z5Range %0, i8 10, 1
  ret %type._Z5Range %1
}
