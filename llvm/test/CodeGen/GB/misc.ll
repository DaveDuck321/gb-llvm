; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 3
; RUN: llc -mtriple=gb -verify-machineinstrs -O3 < %s \
; RUN:   | FileCheck %s -check-prefix=GBI-O3

define i8 @trunc_i32(i32 %0) {
; GBI-O3-LABEL: trunc_i32:
; GBI-O3:       # %bb.0:
; GBI-O3-NEXT:    ld a, c
; GBI-O3-NEXT:    ret
  %res = trunc i32 %0 to i8
  ret i8 %res
}

define i8 @trunc_i16(i16 %0) {
; GBI-O3-LABEL: trunc_i16:
; GBI-O3:       # %bb.0:
; GBI-O3-NEXT:    ld a, c
; GBI-O3-NEXT:    ret
  %res = trunc i16 %0 to i8
  ret i8 %res
}

define i1 @trunc_i1(i8 %0) {
; GBI-O3-LABEL: trunc_i1:
; GBI-O3:       # %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    ret
  %res = trunc i8 %0 to i1
  ret i1 %res
}

define i8 @sext8_i1(i1 %0) {
; GBI-O3-LABEL: sext8_i1:
; GBI-O3:       # %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    and $01
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    sub b
; GBI-O3-NEXT:    ret
  %res = sext i1 %0 to i8
  ret i8 %res
}

define i16 @sext16_i1(i1 %0) {
; GBI-O3-LABEL: sext16_i1:
; GBI-O3:       # %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    and $01
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    sub b
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld h, a
; GBI-O3-NEXT:    ret
  %res = sext i1 %0 to i16
  ret i16 %res
}

define i16 @sext16_i8(i8 %0) {
; GBI-O3-LABEL: sext16_i8:
; GBI-O3:       # %bb.0:
; GBI-O3-NEXT:    ld l, b
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    sra h
; GBI-O3-NEXT:    sra h
; GBI-O3-NEXT:    sra h
; GBI-O3-NEXT:    sra h
; GBI-O3-NEXT:    sra h
; GBI-O3-NEXT:    sra h
; GBI-O3-NEXT:    sra h
; GBI-O3-NEXT:    ret
  %res = sext i8 %0 to i16
  ret i16 %res
}

define i16 @zext16_i8(i8 %0) {
; GBI-O3-LABEL: zext16_i8:
; GBI-O3:       # %bb.0:
; GBI-O3-NEXT:    ld l, b
; GBI-O3-NEXT:    ld h, $00
; GBI-O3-NEXT:    ret
  %res = zext i8 %0 to i16
  ret i16 %res
}

declare void @llvm.trap() noreturn nounwind

define void @trap(i8 %0) noreturn {
; GBI-O3-LABEL: trap:
; GBI-O3:       # %bb.0:
; GBI-O3-NEXT:    trap
  call void @llvm.trap()
  unreachable
}
