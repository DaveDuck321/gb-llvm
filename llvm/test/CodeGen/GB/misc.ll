; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 3
; RUN: llc -mtriple=gb -verify-machineinstrs -O0 < %s \
; RUN:   | FileCheck %s -check-prefix=GBI-O0
; RUN: llc -mtriple=gb -verify-machineinstrs -O3 < %s \
; RUN:   | FileCheck %s -check-prefix=GBI-O3

define i8 @trunc_i32(i32 %0) {
; GBI-O0-LABEL: trunc_i32:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    add sp, -6
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ldi (hl), a
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld hl, sp, 8
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    ld hl, sp, 2
; GBI-O0-NEXT:    ldi (hl), a
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld h, b
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ld a, c
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld hl, sp, 1
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 3
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    ld hl, sp, 2
; GBI-O0-NEXT:    ld b, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, b
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ld b, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, b
; GBI-O0-NEXT:    ; kill: def $c killed $c def $bc
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    ; kill: def $bc killed $hl
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    add sp, 6
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: trunc_i32:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ret
  %res = trunc i32 %0 to i8
  ret i8 %res
}

define i8 @trunc_i16(i16 %0) {
; GBI-O0-LABEL: trunc_i16:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: trunc_i16:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ret
  %res = trunc i16 %0 to i8
  ret i8 %res
}

define i1 @trunc_i1(i8 %0) {
; GBI-O0-LABEL: trunc_i1:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    ld a, b
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: trunc_i1:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    ret
  %res = trunc i8 %0 to i1
  ret i1 %res
}

define i8 @sext8_i1(i1 %0) {
; GBI-O0-LABEL: sext8_i1:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    ld a, b
; GBI-O0-NEXT:    and $01
; GBI-O0-NEXT:    ld c, a
; GBI-O0-NEXT:    ld a, $00
; GBI-O0-NEXT:    sub c
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: sext8_i1:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    and $01
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    sub b
; GBI-O3-NEXT:    ret
  %res = sext i1 %0 to i8
  ret i8 %res
}

define i16 @sext16_i1(i1 %0) {
; GBI-O0-LABEL: sext16_i1:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    ld a, b
; GBI-O0-NEXT:    and $01
; GBI-O0-NEXT:    ld c, a
; GBI-O0-NEXT:    ld a, $00
; GBI-O0-NEXT:    sub c
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: sext16_i1:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    and $01
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    sub b
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld h, l
; GBI-O3-NEXT:    ret
  %res = sext i1 %0 to i16
  ret i16 %res
}

define i16 @sext16_i8(i8 %0) {
; GBI-O0-LABEL: sext16_i8:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    add sp, -3
; GBI-O0-NEXT:    ld hl, sp, 0
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld a, $07
; GBI-O0-NEXT:    dec a
; GBI-O0-NEXT:    inc a
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 3
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    jr z, .LBB5_2
; GBI-O0-NEXT:    jr .LBB5_1
; GBI-O0-NEXT:  .LBB5_1: ; =>This Inner Loop Header: Depth=1
; GBI-O0-NEXT:    ld hl, sp, 2
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    ld hl, sp, 1
; GBI-O0-NEXT:    ld b, (hl)
; GBI-O0-NEXT:    sra b
; GBI-O0-NEXT:    dec a
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 3
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    jr nz, .LBB5_1
; GBI-O0-NEXT:    jr .LBB5_2
; GBI-O0-NEXT:  .LBB5_2:
; GBI-O0-NEXT:    ld hl, sp, 0
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 3
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    add sp, 3
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: sext16_i8:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld l, b
; GBI-O3-NEXT:    ld a, $07
; GBI-O3-NEXT:    dec a
; GBI-O3-NEXT:    inc a
; GBI-O3-NEXT:    ld h, l
; GBI-O3-NEXT:    jp z, .LBB5_3
; GBI-O3-NEXT:  ; %bb.1:
; GBI-O3-NEXT:    ld h, l
; GBI-O3-NEXT:  .LBB5_2: ; =>This Inner Loop Header: Depth=1
; GBI-O3-NEXT:    sra h
; GBI-O3-NEXT:    dec a
; GBI-O3-NEXT:    jp nz, .LBB5_2
; GBI-O3-NEXT:  .LBB5_3:
; GBI-O3-NEXT:    ret
  %res = sext i8 %0 to i16
  ret i16 %res
}

define i16 @zext16_i8(i8 %0) {
; GBI-O0-LABEL: zext16_i8:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    ld l, b
; GBI-O0-NEXT:    ld a, $00
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: zext16_i8:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld l, b
; GBI-O3-NEXT:    ld h, $00
; GBI-O3-NEXT:    ret
  %res = zext i8 %0 to i16
  ret i16 %res
}

declare void @llvm.trap() noreturn nounwind

define void @trap(i8 %0) noreturn {
; GBI-O0-LABEL: trap:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    trap
;
; GBI-O3-LABEL: trap:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    trap
  call void @llvm.trap()
  unreachable
}
