; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 3
; RUN: llc -mtriple=gb -verify-machineinstrs -O3 < %s \
; RUN:   | FileCheck %s -check-prefix=GBI-O3

define i8 @simple_branch(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: simple_branch:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret

  br label %label1
label1:
  ret i8 0
}

define i8 @sge(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: sge:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    sub c
; GBI-O3-NEXT:    cp $80
; GBI-O3-NEXT:    jp nc, .LBB1_2
; GBI-O3-NEXT:  ; %bb.1: ; %label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB1_2: ; %label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret

  %result = icmp sge i8 %b, %c
  br i1 %result, label %label1, label %label2
label1:
  ret i8 1
label2:
  ret i8 0
}

define i8 @sgt(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: sgt:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, c
; GBI-O3-NEXT:    sub b
; GBI-O3-NEXT:    cp $80
; GBI-O3-NEXT:    jp c, .LBB2_2
; GBI-O3-NEXT:  ; %bb.1: ; %label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB2_2: ; %label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret

  %result = icmp sgt i8 %b, %c
  br i1 %result, label %label1, label %label2
label1:
  ret i8 1
label2:
  ret i8 0
}

define i8 @sle(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: sle:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, c
; GBI-O3-NEXT:    sub b
; GBI-O3-NEXT:    cp $80
; GBI-O3-NEXT:    jp nc, .LBB3_2
; GBI-O3-NEXT:  ; %bb.1: ; %label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB3_2: ; %label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret

  %result = icmp sle i8 %b, %c
  br i1 %result, label %label1, label %label2
label1:
  ret i8 1
label2:
  ret i8 0
}

define i8 @slt(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: slt:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    sub c
; GBI-O3-NEXT:    cp $80
; GBI-O3-NEXT:    jp c, .LBB4_2
; GBI-O3-NEXT:  ; %bb.1: ; %label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB4_2: ; %label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret

  %result = icmp slt i8 %b, %c
  br i1 %result, label %label1, label %label2
label1:
  ret i8 1
label2:
  ret i8 0
}

define i8 @uge(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: uge:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    cp c
; GBI-O3-NEXT:    jp c, .LBB5_2
; GBI-O3-NEXT:  ; %bb.1: ; %label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB5_2: ; %label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret
  %result = icmp uge i8 %b, %c
  br i1 %result, label %label1, label %label2
label1:
  ret i8 1
label2:
  ret i8 0
}

define i8 @ugt(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: ugt:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, c
; GBI-O3-NEXT:    cp b
; GBI-O3-NEXT:    jp nc, .LBB6_2
; GBI-O3-NEXT:  ; %bb.1: ; %label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB6_2: ; %label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret
  %result = icmp ugt i8 %b, %c
  br i1 %result, label %label1, label %label2
label1:
  ret i8 1
label2:
  ret i8 0
}

define i8 @ule(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: ule:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, c
; GBI-O3-NEXT:    cp b
; GBI-O3-NEXT:    jp c, .LBB7_2
; GBI-O3-NEXT:  ; %bb.1: ; %label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB7_2: ; %label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret
  %result = icmp ule i8 %b, %c
  br i1 %result, label %label1, label %label2
label1:
  ret i8 1
label2:
  ret i8 0
}

define i8 @ult(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: ult:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    cp c
; GBI-O3-NEXT:    jp nc, .LBB8_2
; GBI-O3-NEXT:  ; %bb.1: ; %label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB8_2: ; %label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret
  %result = icmp ult i8 %b, %c
  br i1 %result, label %label1, label %label2
label1:
  ret i8 1
label2:
  ret i8 0
}


define i8 @eq(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: eq:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    cp c
; GBI-O3-NEXT:    jp nz, .LBB9_2
; GBI-O3-NEXT:  ; %bb.1: ; %label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB9_2: ; %label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret
  %result = icmp eq i8 %b, %c
  br i1 %result, label %label1, label %label2
label1:
  ret i8 1
label2:
  ret i8 0
}

define i8 @ne(i8 %b, i8 %c) nounwind {
; GBI-O3-LABEL: ne:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    cp c
; GBI-O3-NEXT:    jp z, .LBB10_2
; GBI-O3-NEXT:  ; %bb.1: ; %label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB10_2: ; %label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret
  %result = icmp ne i8 %b, %c
  br i1 %result, label %label1, label %label2
label1:
  ret i8 1
label2:
  ret i8 0
}

define i8 @phi(i1 %b) nounwind {
; GBI-O3-LABEL: phi:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    bit 0, b
; GBI-O3-NEXT:    jp z, .LBB11_2
; GBI-O3-NEXT:  ; %bb.1:
; GBI-O3-NEXT:    ld a, $04
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB11_2: ; %label2
; GBI-O3-NEXT:    ld a, $05
; GBI-O3-NEXT:    ret
  br i1 %b, label %label1, label %label2
label1:
  br label %end
label2:
  br label %end
end:
  %result = phi i8 [4, %label1], [5, %label2]
  ret i8 %result
}

define i8 @select(i1 %b) nounwind {
; GBI-O3-LABEL: select:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    bit 0, b
; GBI-O3-NEXT:    jp z, .LBB12_2
; GBI-O3-NEXT:  ; %bb.1:
; GBI-O3-NEXT:    ld a, $04
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB12_2: ; %select.false
; GBI-O3-NEXT:    ld a, $05
; GBI-O3-NEXT:    ret
  %result = select i1 %b, i8 4, i8 5
  ret i8 %result
}

define void @jt(i8 %in, ptr %out) {
; GBI-O3-LABEL: jt:
; GBI-O3:       ; %bb.0: ; %entry
; GBI-O3-NEXT:    ld a, $02
; GBI-O3-NEXT:    sub b
; GBI-O3-NEXT:    cp $80
; GBI-O3-NEXT:    jp nc, .LBB13_4
; GBI-O3-NEXT:  ; %bb.1: ; %entry
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    cp $01
; GBI-O3-NEXT:    jp z, .LBB13_7
; GBI-O3-NEXT:  ; %bb.2: ; %entry
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    cp $02
; GBI-O3-NEXT:    jp nz, .LBB13_9
; GBI-O3-NEXT:  ; %bb.3: ; %bb2
; GBI-O3-NEXT:    ld (hl), $03
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB13_4: ; %entry
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    cp $03
; GBI-O3-NEXT:    jp z, .LBB13_8
; GBI-O3-NEXT:  ; %bb.5: ; %entry
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    cp $04
; GBI-O3-NEXT:    jp nz, .LBB13_9
; GBI-O3-NEXT:  ; %bb.6: ; %bb4
; GBI-O3-NEXT:    ld (hl), $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB13_7: ; %bb1
; GBI-O3-NEXT:    ld (hl), $04
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB13_8: ; %bb3
; GBI-O3-NEXT:    ld (hl), $02
; GBI-O3-NEXT:  .LBB13_9: ; %exit
; GBI-O3-NEXT:    ret
entry:
  switch i8 %in, label %exit [
    i8 1, label %bb1
    i8 2, label %bb2
    i8 3, label %bb3
    i8 4, label %bb4
  ]
bb1:
  store i8 4, ptr %out
  br label %exit
bb2:
  store i8 3, ptr %out
  br label %exit
bb3:
  store i8 2, ptr %out
  br label %exit
bb4:
  store i8 1, ptr %out
  br label %exit
exit:
  ret void
}

define i8 @indirectbr(ptr %target) nounwind {
; GBI-O3-LABEL: indirectbr:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    jp (hl)
; GBI-O3-NEXT:  .LBB14_1: ; %test_label1
; GBI-O3-NEXT:    ld a, $01
; GBI-O3-NEXT:    ret
; GBI-O3-NEXT:  .LBB14_2: ; %test_label2
; GBI-O3-NEXT:    ld a, $00
; GBI-O3-NEXT:    ret
  indirectbr ptr %target, [label %test_label1, label %test_label2]
test_label1:
  ret i8 1
test_label2:
  br label %ret
ret:
  ret i8 0
}
