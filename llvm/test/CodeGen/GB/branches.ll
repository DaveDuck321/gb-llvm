; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 3
; RUN: llc -mtriple=gb -verify-machineinstrs -O0 < %s \
; RUN:   | FileCheck %s -check-prefix=GBI


define i8 @simple_branch(i8 %a, i8 %b) nounwind {
; GBI-LABEL: simple_branch:
; GBI:       ; %bb.0:
; GBI-NEXT:    jr .LBB0_1
; GBI-NEXT:  .LBB0_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
  br label %label1
label1:
  ret i8 0
}

define i8 @sge(i8 %a, i8 %b) nounwind {
; GBI-LABEL: sge:
; GBI:       ; %bb.0:
; GBI-NEXT:    ld a, b
; GBI-NEXT:    sub c
; GBI-NEXT:    cp $7f
; GBI-NEXT:    jr c, .LBB1_2
; GBI-NEXT:    jr .LBB1_1
; GBI-NEXT:  .LBB1_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
; GBI-NEXT:  .LBB1_2: ; %label2
; GBI-NEXT:    ld a, $01
; GBI-NEXT:    ret
  %c = icmp sge i8 %a, %b
  br i1 %c, label %label1, label %label2
label1:
  ret i8 0
label2:
  ret i8 1
}

define i8 @sgt(i8 %a, i8 %b) nounwind {
; GBI-LABEL: sgt:
; GBI:       ; %bb.0:
; GBI-NEXT:    ld a, c
; GBI-NEXT:    sub b
; GBI-NEXT:    cp $80
; GBI-NEXT:    jr c, .LBB2_2
; GBI-NEXT:    jr .LBB2_1
; GBI-NEXT:  .LBB2_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
; GBI-NEXT:  .LBB2_2: ; %label2
; GBI-NEXT:    ld a, $01
; GBI-NEXT:    ret
  %c = icmp sgt i8 %a, %b
  br i1 %c, label %label1, label %label2
label1:
  ret i8 0
label2:
  ret i8 1
}

define i8 @sle(i8 %a, i8 %b) nounwind {
; GBI-LABEL: sle:
; GBI:       ; %bb.0:
; GBI-NEXT:    ld a, c
; GBI-NEXT:    sub b
; GBI-NEXT:    cp $7f
; GBI-NEXT:    jr c, .LBB3_2
; GBI-NEXT:    jr .LBB3_1
; GBI-NEXT:  .LBB3_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
; GBI-NEXT:  .LBB3_2: ; %label2
; GBI-NEXT:    ld a, $01
; GBI-NEXT:    ret
  %c = icmp sle i8 %a, %b
  br i1 %c, label %label1, label %label2
label1:
  ret i8 0
label2:
  ret i8 1
}

define i8 @slt(i8 %a, i8 %b) nounwind {
; GBI-LABEL: slt:
; GBI:       ; %bb.0:
; GBI-NEXT:    ld a, b
; GBI-NEXT:    sub c
; GBI-NEXT:    cp $80
; GBI-NEXT:    jr c, .LBB4_2
; GBI-NEXT:    jr .LBB4_1
; GBI-NEXT:  .LBB4_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
; GBI-NEXT:  .LBB4_2: ; %label2
; GBI-NEXT:    ld a, $01
; GBI-NEXT:    ret
  %c = icmp slt i8 %a, %b
  br i1 %c, label %label1, label %label2
label1:
  ret i8 0
label2:
  ret i8 1
}

define i8 @uge(i8 %a, i8 %b) nounwind {
; GBI-LABEL: uge:
; GBI:       ; %bb.0:
; GBI-NEXT:    ld a, b
; GBI-NEXT:    cp c
; GBI-NEXT:    jr c, .LBB5_2
; GBI-NEXT:    jr .LBB5_1
; GBI-NEXT:  .LBB5_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
; GBI-NEXT:  .LBB5_2: ; %label2
; GBI-NEXT:    ld a, $01
; GBI-NEXT:    ret
  %c = icmp uge i8 %a, %b
  br i1 %c, label %label1, label %label2
label1:
  ret i8 0
label2:
  ret i8 1
}

define i8 @ugt(i8 %a, i8 %b) nounwind {
; GBI-LABEL: ugt:
; GBI:       ; %bb.0:
; GBI-NEXT:    ld a, c
; GBI-NEXT:    cp b
; GBI-NEXT:    jr nc, .LBB6_2
; GBI-NEXT:    jr .LBB6_1
; GBI-NEXT:  .LBB6_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
; GBI-NEXT:  .LBB6_2: ; %label2
; GBI-NEXT:    ld a, $01
; GBI-NEXT:    ret
  %c = icmp ugt i8 %a, %b
  br i1 %c, label %label1, label %label2
label1:
  ret i8 0
label2:
  ret i8 1
}

define i8 @ule(i8 %a, i8 %b) nounwind {
; GBI-LABEL: ule:
; GBI:       ; %bb.0:
; GBI-NEXT:    ld a, c
; GBI-NEXT:    cp b
; GBI-NEXT:    jr c, .LBB7_2
; GBI-NEXT:    jr .LBB7_1
; GBI-NEXT:  .LBB7_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
; GBI-NEXT:  .LBB7_2: ; %label2
; GBI-NEXT:    ld a, $01
; GBI-NEXT:    ret
  %c = icmp ule i8 %a, %b
  br i1 %c, label %label1, label %label2
label1:
  ret i8 0
label2:
  ret i8 1
}

define i8 @ult(i8 %a, i8 %b) nounwind {
; GBI-LABEL: ult:
; GBI:       ; %bb.0:
; GBI-NEXT:    ld a, b
; GBI-NEXT:    cp c
; GBI-NEXT:    jr nc, .LBB8_2
; GBI-NEXT:    jr .LBB8_1
; GBI-NEXT:  .LBB8_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
; GBI-NEXT:  .LBB8_2: ; %label2
; GBI-NEXT:    ld a, $01
; GBI-NEXT:    ret
  %c = icmp ult i8 %a, %b
  br i1 %c, label %label1, label %label2
label1:
  ret i8 0
label2:
  ret i8 1
}


define i8 @eq(i8 %a, i8 %b) nounwind {
; GBI-LABEL: eq:
; GBI:       ; %bb.0:
; GBI-NEXT:    ld a, b
; GBI-NEXT:    cp c
; GBI-NEXT:    jr nz, .LBB9_2
; GBI-NEXT:    jr .LBB9_1
; GBI-NEXT:  .LBB9_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
; GBI-NEXT:  .LBB9_2: ; %label2
; GBI-NEXT:    ld a, $01
; GBI-NEXT:    ret
  %c = icmp eq i8 %a, %b
  br i1 %c, label %label1, label %label2
label1:
  ret i8 0
label2:
  ret i8 1
}

define i8 @ne(i8 %a, i8 %b) nounwind {
; GBI-LABEL: ne:
; GBI:       ; %bb.0:
; GBI-NEXT:    ld a, b
; GBI-NEXT:    cp c
; GBI-NEXT:    jr z, .LBB10_2
; GBI-NEXT:    jr .LBB10_1
; GBI-NEXT:  .LBB10_1: ; %label1
; GBI-NEXT:    ld a, $00
; GBI-NEXT:    ret
; GBI-NEXT:  .LBB10_2: ; %label2
; GBI-NEXT:    ld a, $01
; GBI-NEXT:    ret
  %c = icmp ne i8 %a, %b
  br i1 %c, label %label1, label %label2
label1:
  ret i8 0
label2:
  ret i8 1
}
