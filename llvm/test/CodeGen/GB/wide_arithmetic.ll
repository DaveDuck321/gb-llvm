; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 3
; RUN: llc -mtriple=gb -verify-machineinstrs -O0 < %s \
; RUN:   | FileCheck %s -check-prefix=GBI-O0
; RUN: llc -mtriple=gb -verify-machineinstrs -O3 < %s \
; RUN:   | FileCheck %s -check-prefix=GBI-O3

define i16 @and(i16 %b, i16 %c) nounwind {
; GBI-O0-LABEL: and:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    add sp, -8
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ; kill: def $hl
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld hl, sp, 10
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld e, l
; GBI-O0-NEXT:    ld a, e
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld e, l
; GBI-O0-NEXT:    ; kill: def $d killed $d killed $de
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 3
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld d, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 6
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ld a, c
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    ld hl, sp, 2
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    and c
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 9
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ld d, (hl)
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ldi a, (hl)
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    ld hl, sp, 7
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    and d
; GBI-O0-NEXT:    ; kill: def $c killed $c def $bc
; GBI-O0-NEXT:    ld b, d
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    add sp, 8
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: and:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    add sp, -2
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld c, l
; GBI-O3-NEXT:    ld hl, sp, 0
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 4
; GBI-O3-NEXT:    ld d, h
; GBI-O3-NEXT:    ld e, l
; GBI-O3-NEXT:    ld a, e
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, d
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld h, a
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    and (hl)
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld hl, sp, 0
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld h, d
; GBI-O3-NEXT:    ld l, e
; GBI-O3-NEXT:    ; kill: def $de
; GBI-O3-NEXT:    and (hl)
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld l, c
; GBI-O3-NEXT:    ; kill: def $bc
; GBI-O3-NEXT:    add sp, 2
; GBI-O3-NEXT:    ret
  %1 = and i16 %b, %c
  ret i16 %1
}

define i16 @andi(i16 %b) nounwind {
; GBI-O0-LABEL: andi:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    and $01
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld a, $00
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: andi:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    and $01
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld h, $00
; GBI-O3-NEXT:    ret
  %1 = and i16 %b, 1
  ret i16 %1
}

define i16 @xor(i16 %b, i16 %c) nounwind {
; GBI-O0-LABEL: xor:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    add sp, -8
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ; kill: def $hl
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld hl, sp, 10
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld e, l
; GBI-O0-NEXT:    ld a, e
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld e, l
; GBI-O0-NEXT:    ; kill: def $d killed $d killed $de
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 3
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld d, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 6
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ld a, c
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    ld hl, sp, 2
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    xor c
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 9
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ld d, (hl)
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ldi a, (hl)
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    ld hl, sp, 7
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    xor d
; GBI-O0-NEXT:    ; kill: def $c killed $c def $bc
; GBI-O0-NEXT:    ld b, d
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    add sp, 8
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: xor:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    add sp, -2
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld c, l
; GBI-O3-NEXT:    ld hl, sp, 0
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 4
; GBI-O3-NEXT:    ld d, h
; GBI-O3-NEXT:    ld e, l
; GBI-O3-NEXT:    ld a, e
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, d
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld h, a
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    xor (hl)
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld hl, sp, 0
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld h, d
; GBI-O3-NEXT:    ld l, e
; GBI-O3-NEXT:    ; kill: def $de
; GBI-O3-NEXT:    xor (hl)
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld l, c
; GBI-O3-NEXT:    ; kill: def $bc
; GBI-O3-NEXT:    add sp, 2
; GBI-O3-NEXT:    ret
  %1 = xor i16 %b, %c
  ret i16 %1
}

define i16 @xori(i16 %b) nounwind {
; GBI-O0-LABEL: xori:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ; kill: def $hl
; GBI-O0-NEXT:    ld h, b
; GBI-O0-NEXT:    ld l, c
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    xor $01
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld a, b
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: xori:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    xor $01
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ret
  %1 = xor i16 %b, 1
  ret i16 %1
}

define i16 @or(i16 %b, i16 %c) nounwind {
; GBI-O0-LABEL: or:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    add sp, -8
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ; kill: def $hl
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld hl, sp, 10
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld e, l
; GBI-O0-NEXT:    ld a, e
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld e, l
; GBI-O0-NEXT:    ; kill: def $d killed $d killed $de
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 3
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld d, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 6
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ld a, c
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    ld hl, sp, 2
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    or c
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 9
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ld d, (hl)
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ldi a, (hl)
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    ld hl, sp, 7
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    or d
; GBI-O0-NEXT:    ; kill: def $c killed $c def $bc
; GBI-O0-NEXT:    ld b, d
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    add sp, 8
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: or:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    add sp, -2
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld c, l
; GBI-O3-NEXT:    ld hl, sp, 0
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 4
; GBI-O3-NEXT:    ld d, h
; GBI-O3-NEXT:    ld e, l
; GBI-O3-NEXT:    ld a, e
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, d
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld h, a
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    or (hl)
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld hl, sp, 0
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld h, d
; GBI-O3-NEXT:    ld l, e
; GBI-O3-NEXT:    ; kill: def $de
; GBI-O3-NEXT:    or (hl)
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld l, c
; GBI-O3-NEXT:    ; kill: def $bc
; GBI-O3-NEXT:    add sp, 2
; GBI-O3-NEXT:    ret
  %1 = or i16 %b, %c
  ret i16 %1
}

define i16 @ori(i16 %b) nounwind {
; GBI-O0-LABEL: ori:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ; kill: def $hl
; GBI-O0-NEXT:    ld h, b
; GBI-O0-NEXT:    ld l, c
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    or $01
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld a, b
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: ori:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    or $01
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ret
  %1 = or i16 %b, 1
  ret i16 %1
}

define i16 @sub16(i16 %a, i8 %b) nounwind {
; GBI-O0-LABEL: sub16:
; GBI-O0:       ; %bb.0:
; GBI-O0-NEXT:    add sp, -1
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld e, l
; GBI-O0-NEXT:    ld a, e
; GBI-O0-NEXT:    ld c, h
; GBI-O0-NEXT:    ld hl, sp, 0
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    sub b
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    sbc $00
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    add sp, 1
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: sub16:
; GBI-O3:       ; %bb.0:
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    sub b
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    sbc $00
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld l, c
; GBI-O3-NEXT:    ; kill: def $bc
; GBI-O3-NEXT:    ret
  %1 = zext i8 %b to i16
  %2 = sub i16 %a, %1
  ret i16 %2
}

define i1 @less_than(i16 %0, i16 %1) {
; GBI-O0-LABEL: less_than:
; GBI-O0:       ; %bb.0: ; %begin
; GBI-O0-NEXT:    add sp, -40
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld e, l
; GBI-O0-NEXT:    ; kill: def $hl
; GBI-O0-NEXT:    ld hl, sp, 32
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    ld hl, sp, 26
; GBI-O0-NEXT:    ldi (hl), a
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld h, b
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ld a, c
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld hl, sp, 1
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 3
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 17
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    ld hl, sp, 11
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    ld hl, sp, 36
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    ld hl, sp, 22
; GBI-O0-NEXT:    ldi (hl), a
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld h, b
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ld a, c
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld hl, sp, 2
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 15
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    ld c, a
; GBI-O0-NEXT:    ld hl, sp, 42
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    ld hl, sp, 20
; GBI-O0-NEXT:    ldi (hl), a
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld h, b
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    ld hl, sp, 20
; GBI-O0-NEXT:    ld b, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, b
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld hl, sp, 3
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 14
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    ld hl, sp, 34
; GBI-O0-NEXT:    push bc
; GBI-O0-NEXT:    ld c, h
; GBI-O0-NEXT:    ld b, l
; GBI-O0-NEXT:    ld hl, sp, 20
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    ld l, b
; GBI-O0-NEXT:    ld h, c
; GBI-O0-NEXT:    pop bc
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 20
; GBI-O0-NEXT:    ldi a, (hl)
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ; kill: def $h killed $h killed $hl
; GBI-O0-NEXT:    push bc
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld hl, sp, 6
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop bc
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 8
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    ld hl, sp, 12
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    ld hl, sp, 9
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    ld hl, sp, 38
; GBI-O0-NEXT:    push bc
; GBI-O0-NEXT:    ld c, h
; GBI-O0-NEXT:    ld b, l
; GBI-O0-NEXT:    ld hl, sp, 18
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    ld l, b
; GBI-O0-NEXT:    ld h, c
; GBI-O0-NEXT:    pop bc
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 18
; GBI-O0-NEXT:    ldi a, (hl)
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ; kill: def $h killed $h killed $hl
; GBI-O0-NEXT:    push bc
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld hl, sp, 7
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop bc
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 9
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    push bc
; GBI-O0-NEXT:    ld c, h
; GBI-O0-NEXT:    ld b, l
; GBI-O0-NEXT:    ld hl, sp, 8
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    pop bc
; GBI-O0-NEXT:    ld h, d
; GBI-O0-NEXT:    ld l, e
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 8
; GBI-O0-NEXT:    ldi a, (hl)
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 30
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    ld hl, sp, 9
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    ld hl, sp, 10
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 30
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    ld hl, sp, 11
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    ld hl, sp, 12
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, b
; GBI-O0-NEXT:    ld b, (hl)
; GBI-O0-NEXT:    ld hl, sp, 13
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 16
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, c
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld hl, sp, 15
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld hl, sp, 16
; GBI-O0-NEXT:    ldi a, (hl)
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld a, e
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    ld hl, sp, 18
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, c
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    ld hl, sp, 20
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, c
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    ld hl, sp, 22
; GBI-O0-NEXT:    ld d, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, d
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 27
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    cp c
; GBI-O0-NEXT:    ; implicit-def: $a
; GBI-O0-NEXT:    rla
; GBI-O0-NEXT:    ld d, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 30
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 32
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    ld hl, sp, 26
; GBI-O0-NEXT:    ld d, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, d
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    sub b
; GBI-O0-NEXT:    rlca
; GBI-O0-NEXT:    ld c, a
; GBI-O0-NEXT:    ld hl, sp, 28
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    ld hl, sp, 29
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    cp b
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 32
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 33
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    jr z, .LBB7_2
; GBI-O0-NEXT:    jr .LBB7_1
; GBI-O0-NEXT:  .LBB7_1: ; %begin
; GBI-O0-NEXT:    ld hl, sp, 29
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    ld hl, sp, 31
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    jr .LBB7_2
; GBI-O0-NEXT:  .LBB7_2: ; %begin
; GBI-O0-NEXT:    ld hl, sp, 14
; GBI-O0-NEXT:    ld d, (hl)
; GBI-O0-NEXT:    ld hl, sp, 25
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    ld hl, sp, 31
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    ; kill: def $c killed $c def $bc
; GBI-O0-NEXT:    ld b, d
; GBI-O0-NEXT:    add sp, 40
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: less_than:
; GBI-O3:       ; %bb.0: ; %begin
; GBI-O3-NEXT:    add sp, -26
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld hl, sp, 12
; GBI-O3-NEXT:    ldi (hl), a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 24
; GBI-O3-NEXT:    ld d, h
; GBI-O3-NEXT:    ld e, l
; GBI-O3-NEXT:    ld a, e
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld a, d
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld hl, sp, 14
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 18
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld hl, sp, 8
; GBI-O3-NEXT:    ldi (hl), a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld hl, sp, 16
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 22
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld hl, sp, 4
; GBI-O3-NEXT:    ldi (hl), a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld hl, sp, 10
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 28
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld hl, sp, 2
; GBI-O3-NEXT:    ldi (hl), a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld hl, sp, 6
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 20
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld c, l
; GBI-O3-NEXT:    ld a, c
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld h, a
; GBI-O3-NEXT:    push bc
; GBI-O3-NEXT:    ld c, h
; GBI-O3-NEXT:    ld b, l
; GBI-O3-NEXT:    ld hl, sp, 2
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    pop bc
; GBI-O3-NEXT:    ld h, d
; GBI-O3-NEXT:    ld l, e
; GBI-O3-NEXT:    ; kill: def $de
; GBI-O3-NEXT:    push hl
; GBI-O3-NEXT:    ld hl, sp, 14
; GBI-O3-NEXT:    ld e, (hl)
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld d, (hl)
; GBI-O3-NEXT:    pop hl
; GBI-O3-NEXT:    ld (hl), e
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld l, c
; GBI-O3-NEXT:    ; kill: def $bc
; GBI-O3-NEXT:    ld (hl), e
; GBI-O3-NEXT:    ld hl, sp, 2
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld b, (hl)
; GBI-O3-NEXT:    ld a, e
; GBI-O3-NEXT:    cp b
; GBI-O3-NEXT:    rla
; GBI-O3-NEXT:    ld hl, sp, 2
; GBI-O3-NEXT:    ld (hl), a
; GBI-O3-NEXT:    ld hl, sp, 4
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 8
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 14
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld (hl), d
; GBI-O3-NEXT:    ld hl, sp, 0
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld (hl), d
; GBI-O3-NEXT:    ld hl, sp, 6
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld c, (hl)
; GBI-O3-NEXT:    ld hl, sp, 10
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    ld hl, sp, 16
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    ld a, d
; GBI-O3-NEXT:    sub c
; GBI-O3-NEXT:    rlca
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld a, d
; GBI-O3-NEXT:    cp c
; GBI-O3-NEXT:    push af
; GBI-O3-NEXT:    ld hl, sp, 4
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    pop af
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    jp z, .LBB7_2
; GBI-O3-NEXT:  ; %bb.1: ; %begin
; GBI-O3-NEXT:    ld a, b
; GBI-O3-NEXT:  .LBB7_2: ; %begin
; GBI-O3-NEXT:    add sp, 26
; GBI-O3-NEXT:    ret
begin:
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  store i16 %0, ptr %2, align 2
  store i16 %1, ptr %3, align 2

  %6 = load i16, ptr %2, align 2
  store i16 %6, ptr %4, align 2

  %7 = load i16, ptr %3, align 2
  store i16 %7, ptr %5, align 2

  %8 = load i16, ptr %4, align 2
  %9 = load i16, ptr %5, align 2
  %10 = icmp slt i16 %8, %9
  ret i1 %10
}

define i1 @less_than_call(i16 %0, i16 %1) {
; GBI-O0-LABEL: less_than_call:
; GBI-O0:       ; %bb.0: ; %begin
; GBI-O0-NEXT:    add sp, -28
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ; kill: def $hl
; GBI-O0-NEXT:    ld hl, sp, 20
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld hl, sp, 26
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    ld hl, sp, 6
; GBI-O0-NEXT:    ldi (hl), a
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld h, d
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld e, l
; GBI-O0-NEXT:    ld a, e
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld hl, sp, 3
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 7
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ld a, b
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    ld hl, sp, 30
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    ld hl, sp, 12
; GBI-O0-NEXT:    ldi (hl), a
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld h, b
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ld a, c
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld hl, sp, 4
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 6
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 12
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    ld hl, sp, 9
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    ld hl, sp, 0
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld a, l
; GBI-O0-NEXT:    ld hl, sp, 18
; GBI-O0-NEXT:    ldi (hl), a
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    ld h, b
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld c, l
; GBI-O0-NEXT:    ld a, c
; GBI-O0-NEXT:    ld b, h
; GBI-O0-NEXT:    ld hl, sp, 5
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 7
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 19
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    ld hl, sp, 24
; GBI-O0-NEXT:    ld d, h
; GBI-O0-NEXT:    ld e, l
; GBI-O0-NEXT:    ld hl, sp, 6
; GBI-O0-NEXT:    ldi a, (hl)
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 16
; GBI-O0-NEXT:    ld (hl), e
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ld a, e
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 16
; GBI-O0-NEXT:    ld e, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld d, (hl)
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ld c, d
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 22
; GBI-O0-NEXT:    ld e, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld d, (hl)
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 10
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    add $01
; GBI-O0-NEXT:    ld c, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    ld hl, sp, 12
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    ld a, h
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    push af
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 15
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    pop af
; GBI-O0-NEXT:    adc $00
; GBI-O0-NEXT:    ld c, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 11
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    ld d, e
; GBI-O0-NEXT:    ld (hl), d
; GBI-O0-NEXT:    ld hl, sp, 10
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, a
; GBI-O0-NEXT:    ld a, (hl)
; GBI-O0-NEXT:    ld hl, sp, 11
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, c
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    ld hl, sp, 12
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, c
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    ld hl, sp, 14
; GBI-O0-NEXT:    ld d, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, d
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    ld hl, sp, 17
; GBI-O0-NEXT:    ld l, (hl)
; GBI-O0-NEXT:    ; kill: def $l killed $l def $hl
; GBI-O0-NEXT:    ld h, b
; GBI-O0-NEXT:    ld (hl), a
; GBI-O0-NEXT:    ld hl, sp, 18
; GBI-O0-NEXT:    ld b, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, b
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    ld hl, sp, 20
; GBI-O0-NEXT:    ld b, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld h, (hl)
; GBI-O0-NEXT:    ld l, b
; GBI-O0-NEXT:    ; kill: def $c killed $c def $bc
; GBI-O0-NEXT:    ld b, a
; GBI-O0-NEXT:    push hl
; GBI-O0-NEXT:    ld hl, sp, 24
; GBI-O0-NEXT:    ld (hl), c
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld (hl), b
; GBI-O0-NEXT:    pop hl
; GBI-O0-NEXT:    call less_than
; GBI-O0-NEXT:    ld hl, sp, 22
; GBI-O0-NEXT:    ld c, (hl)
; GBI-O0-NEXT:    inc hl
; GBI-O0-NEXT:    ld b, (hl)
; GBI-O0-NEXT:    add sp, 28
; GBI-O0-NEXT:    ret
;
; GBI-O3-LABEL: less_than_call:
; GBI-O3:       ; %bb.0: ; %begin
; GBI-O3-NEXT:    add sp, -20
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld c, l
; GBI-O3-NEXT:    ld hl, sp, 14
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 18
; GBI-O3-NEXT:    ld d, h
; GBI-O3-NEXT:    ld e, l
; GBI-O3-NEXT:    ld hl, sp, 12
; GBI-O3-NEXT:    ld (hl), e
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), d
; GBI-O3-NEXT:    ld a, e
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, d
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld h, a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 22
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld hl, sp, 10
; GBI-O3-NEXT:    ldi (hl), a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld hl, sp, 4
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 0
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld hl, sp, 8
; GBI-O3-NEXT:    ldi (hl), a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld c, a
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld b, a
; GBI-O3-NEXT:    ld hl, sp, 6
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld hl, sp, 16
; GBI-O3-NEXT:    ld b, h
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    ld hl, sp, 2
; GBI-O3-NEXT:    ldi (hl), a
; GBI-O3-NEXT:    ld (hl), b
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld h, b
; GBI-O3-NEXT:    ld a, l
; GBI-O3-NEXT:    add $01
; GBI-O3-NEXT:    ld e, a
; GBI-O3-NEXT:    ld a, h
; GBI-O3-NEXT:    adc $00
; GBI-O3-NEXT:    ld d, a
; GBI-O3-NEXT:    ld hl, sp, 12
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    push hl
; GBI-O3-NEXT:    ld hl, sp, 16
; GBI-O3-NEXT:    ld c, (hl)
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld b, (hl)
; GBI-O3-NEXT:    pop hl
; GBI-O3-NEXT:    ld (hl), c
; GBI-O3-NEXT:    ld hl, sp, 4
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld a, (hl)
; GBI-O3-NEXT:    ld h, d
; GBI-O3-NEXT:    ld l, e
; GBI-O3-NEXT:    ; kill: def $de
; GBI-O3-NEXT:    ld (hl), a
; GBI-O3-NEXT:    ld hl, sp, 10
; GBI-O3-NEXT:    ld b, (hl)
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, b
; GBI-O3-NEXT:    ld d, (hl)
; GBI-O3-NEXT:    ld hl, sp, 2
; GBI-O3-NEXT:    ld b, (hl)
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, b
; GBI-O3-NEXT:    ld (hl), d
; GBI-O3-NEXT:    ld hl, sp, 6
; GBI-O3-NEXT:    ld b, (hl)
; GBI-O3-NEXT:    inc hl
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, b
; GBI-O3-NEXT:    ld (hl), a
; GBI-O3-NEXT:    ld hl, sp, 8
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    ld (hl), d
; GBI-O3-NEXT:    ld hl, sp, 14
; GBI-O3-NEXT:    ldi a, (hl)
; GBI-O3-NEXT:    ld h, (hl)
; GBI-O3-NEXT:    ld l, a
; GBI-O3-NEXT:    call less_than
; GBI-O3-NEXT:    add sp, 20
; GBI-O3-NEXT:    ret
begin:
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  store i16 %0, ptr %2, align 2
  store i16 %1, ptr %3, align 2
  %4 = load i16, ptr %2, align 2
  %5 = load i16, ptr %3, align 2
  %6 = call i1 @less_than(i16 %4, i16 %5)
  ret i1 %6
}
