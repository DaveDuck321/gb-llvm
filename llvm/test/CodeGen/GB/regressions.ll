; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=gb -verify-machineinstrs < %s \
; RUN:   | FileCheck %s -check-prefix=GBI
; RUN: llc -O3 -mtriple=gb -verify-machineinstrs < %s \
; RUN:   | FileCheck %s -check-prefix=GBI

@_ZL8scroll_y = external global i8

define void @_ZN12FallingPiece36copy_position_into_underlying_spriteEv() {
; GBI-LABEL: _ZN12FallingPiece36copy_position_into_underlying_spriteEv:
; GBI:       # %bb.0: # %entry
; GBI-NEXT:    ld a, (_ZL8scroll_y)
; GBI-NEXT:    ld b, a
; GBI-NEXT:    ld de, $0000
; GBI-NEXT:    ld c, $01
; GBI-NEXT:    ld h, d
; GBI-NEXT:    ld l, e
; GBI-NEXT:  .LBB0_1: # %for.cond
; GBI-NEXT:    # =>This Inner Loop Header: Depth=1
; GBI-NEXT:    ld a, b
; GBI-NEXT:    ld (de), a
; GBI-NEXT:    ld a, l
; GBI-NEXT:    or c
; GBI-NEXT:    ld l, a
; GBI-NEXT:    jr .LBB0_1
entry:
  %0 = load i8, ptr @_ZL8scroll_y, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.cond, %entry
  %__begin1.0.idx = phi i16 [ 0, %entry ], [ %__begin1.0.add, %for.cond ]
  %cmp.not = icmp eq i16 %__begin1.0.idx, 0
  store i8 %0, ptr null, align 1
  %__begin1.0.add = or i16 %__begin1.0.idx, 1
  br label %for.cond
}
